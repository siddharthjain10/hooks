{"ast":null,"code":"var _jsxFileName = \"/Users/jain/Documents/Projects/JavaScript/react/hooks/src/components/useReducerComplexCounter.js\";\nimport React, { useReducer } from 'react';\nconst initialState = {\n  FirstCounter: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return {\n        FirstCounter: state.FirstCounter + 1\n      };\n      break;\n\n    case 'decrement':\n      return {\n        FirstCounter: state.FirstCounter - 1\n      };\n      break;\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nfunction UseReducerComplexCounter() {\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, count.FirstCounter), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"increment\",\n      value: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"decrement\",\n      value: 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"reset\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Reset\"));\n}\n\nexport default UseReducerComplexCounter;","map":{"version":3,"sources":["/Users/jain/Documents/Projects/JavaScript/react/hooks/src/components/useReducerComplexCounter.js"],"names":["React","useReducer","initialState","FirstCounter","reducer","state","action","type","UseReducerComplexCounter","count","dispatch","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAG;AADE,CAArB;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAO;AAACJ,QAAAA,YAAY,EAAGE,KAAK,CAACF,YAAN,GAAqB;AAArC,OAAP;AACA;;AACJ,SAAK,WAAL;AACI,aAAO;AAACA,QAAAA,YAAY,EAAGE,KAAK,CAACF,YAAN,GAAqB;AAArC,OAAP;AACA;;AACJ,SAAK,OAAL;AACI,aAAOD,YAAP;;AACJ;AACI,aAAOG,KAAP;AAVR;AAaH,CAdD;;AAgBA,SAASG,wBAAT,GAAoC;AAEhC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBT,UAAU,CAACG,OAAD,EAAUF,YAAV,CAAnC;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,KAAK,CAACN,YAAX,CADJ,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE,WAAP;AAAoBI,MAAAA,KAAK,EAAE;AAA3B,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE,WAAP;AAAoBI,MAAAA,KAAK,EAAE;AAA3B,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAQ,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CADJ;AAQH;;AAED,eAAeC,wBAAf","sourcesContent":["import React, {useReducer} from 'react'\n\n\nconst initialState = {\n    FirstCounter : 0\n}\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'increment':\n            return {FirstCounter : state.FirstCounter + 1}\n            break\n        case 'decrement':\n            return {FirstCounter : state.FirstCounter - 1}\n            break\n        case 'reset':\n            return initialState\n        default:\n            return state\n\n    }\n}\n\nfunction UseReducerComplexCounter() {\n\n    const [count,dispatch] = useReducer(reducer, initialState)\n\n    return (\n        <div>\n            <h1>{count.FirstCounter}</h1>\n            <button onClick={() => dispatch({type: \"increment\", value: 1})}>Increment</button>\n            <button onClick={() => dispatch({type: \"decrement\", value: 5})}>Decrement</button>\n            <button onClick={() => dispatch({type: \"reset\"})}>Reset</button>           \n        </div>\n    )\n}\n\nexport default UseReducerComplexCounter\n"]},"metadata":{},"sourceType":"module"}